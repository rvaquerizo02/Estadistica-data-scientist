[["modelos-GLM.html", "Capítulo 15 Modelos GLM. Regresión logística y regresión de poisson 15.1 Motivación de los modelos GLM 15.2 La función de enlace en los modelos GLM 15.3 Regresión logística 15.4 Regresión de poisson 15.5 Los GLM y el concepto microsegmento", " Capítulo 15 Modelos GLM. Regresión logística y regresión de poisson 15.1 Motivación de los modelos GLM Hasta el momento se han planteado los siguientes modelos. Modelo de regresión lineal Modelos factoriales en diseño de experimentos Para ambos modelos la variable respuesta ha de ser cuantitativa y distribuida normalmente, pero en el capítulo 10 se vio la siguiente figura. La respuesta normal o gaussiana aparece, pero existen otro tipo de situaciones a las que se enfrenta el científico de datos donde el evento a estudiar no se distribuye normalmente. Sin ir mas lejos, en el ejercicio que está sirviendo de hilo conductor en el ensayo, una aseguradora española que opera en múltiples ramos quiere ofrecer seguro de automóviles a sus clientes del ramo de salud. Para ello se realizó un cuestionario a los clientes de forma que se marcó quienes de ellos estarían interesados en el producto de automóviles y quienes no. La variable de interés es si o no lo que plantea una clasificación binomial. ¿Qué sucede si se modeliza eventos si/no mediante un modelo de regresión lineal? Siguiendo el propio ejemplo de trabajo al que se hace permanentemente referencia. library(tidyverse) library(DT) train &lt;- read.csv(&quot;./data/train.csv&quot;) datatable(head(train,5)) Código conocido para importar los datos y mostrar la cabecera de los mismos, a continuación se realiza un modelo de regresión lineal sobre una muestra aleatoria del conjunto de datos de partida de 1000 observaciones donde la variable Response se pone en función de la prima anual Annual_Premium. set.seed(0) muestra &lt;- train %&gt;% sample_n(1000) modelo.prueba &lt;- lm(muestra$Response ~ muestra$Annual_Premium) Se grafica el resultado del modelo tras la realización del scoring sobre el propio conjunto de datos empleado para realizar el modelo. muestra$prediccion &lt;- predict(modelo.prueba, muestra) muestra %&gt;% ggplot(aes(x=Annual_Premium, y=Response)) + geom_point() + geom_line(aes(x=Annual_Premium,prediccion), color=&quot;#E30606&quot;) Se puede observar que una recta de regresión no tiene mucho sentido, es una recta que está entre el 0 y el 1, no sirve este modelo para modelizar una variable que toma valores de esta forma. Un paso más allá, llevando este caso al extremo se modeliza una función de probabilidad de un evento de la forma \\(P(x) = \\frac{1}{1 + exp(f(x))}\\) # Observaciones num = 1000 x = rnorm(num) La variable independiente x se distribuye normalmente. Ahora se calcula una probabilidad con la función de probabilidad antes citada para \\(f(x)=-5 + 2.5*x\\) (por asignar unos parámetros). Esa probabilidad se pasa a valores 0 y 1 mediante una generación de números aleatorios de una binomial. p=1/(1+exp(-(-5 + 2.5*x))) # Generación de 0/1 aleatorios en función de p y=rbinom(num,1,p) datos_binomial = data.frame(cbind(x,y)) En este punto se dispone de un conjunto de datos donde la variable dependiente es una distribución binomial función de una variable independiente que se distribuye normalmente. Se insiste en la importancia de generar este tipo de variables no solo para entender como se comportan funciones, también es útil para crear sistemas complejos. Con el conjunto de datos generado artificialmente se realiza un modelo. modelo.prueba2 &lt;- lm(data=datos_binomial, y~x) prediccion &lt;- data.frame(x=datos_binomial$x, y = predict(modelo.prueba2, datos_binomial)) ggplot(data=datos_binomial, aes(x=x, y=y)) + geom_point() + geom_line(data = prediccion, aes(x=x, y=y), color=&quot;red&quot;) + labs(title = &quot;Regresión lineal sobre datos binomiales&quot;) En este caso el modelo de regresión lineal puede obtener números inferiores a 0 que no tienen sentido, es claro que a medida que aumenta x aumenta la probabilidad de y = 1. Además,como se señaló en la figura con la que se iniciaba el capítulo los problemas a los que se enfrenta un científico de datos no son solamente clasificaciones binomiales, pueden seguir una distribución de Poisson si se están contando elementos en un espacio de tiempo o una distribución Gamma si se están modelizando importes (por ejemplo). En estas situaciones los modelos lineales tal y como se han trabajado hasta el momento no sirven. Es necesario añadir algún elemento, alguna transformación o función que permita emplear modelos lineales con este tipo de distribuciones y por ello aparecen los Modelos Lineales Generalizados GLM por sus siglas en ingles. Son modelos lineales que permiten que la variable dependiente no tenga cambios aditivos, es decir, que la variable dependiente no se distribuya normalmente. 15.2 La función de enlace en los modelos GLM Como en todo modelo estadístico se tiene una componente aleatoria que hay predecir/explicar que ahora no se distribuye normalmente y se dispone de otro componente que, sistemáticamente, predice/describe esa componente aleatoria. Los GLM añaden al modelo lineal una función de enlace a los datos que nos permite relacionar los modelos lineales con otro tipo de distribuciones mediante una función de la media. Para entender mejor en que consiste la función de enlace hay que volver al modelo lineal donde se indicaba que era una variación aditiva de medias por lo que su función de enlace es la propia media. En una distribución binomial la media es una proporción \\(p\\) pero se ve en el ejemplo anterior que el modelo no arroja el dato esperado, sin embargo, si se modeliza \\(log(\\frac{p}{1-p})\\) para esos datos artificiales creados con anterioridad ¿qué sucede? modelo.prueba2 &lt;- lm(data=datos_binomial, log(p/(1-p))~x) summary(modelo.prueba2) ## Warning in summary.lm(modelo.prueba2): essentially perfect fit: summary may be ## unreliable ## ## Call: ## lm(formula = log(p/(1 - p)) ~ x, data = datos_binomial) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.193e-14 -3.040e-16 6.000e-18 2.190e-16 7.750e-14 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -5.000e+00 7.971e-17 -6.273e+16 &lt;2e-16 *** ## x 2.500e+00 7.712e-17 3.242e+16 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 2.52e-15 on 998 degrees of freedom ## Multiple R-squared: 1, Adjusted R-squared: 1 ## F-statistic: 1.051e+33 on 1 and 998 DF, p-value: &lt; 2.2e-16 prediccion &lt;- data.frame(x=datos_binomial$x, y = predict(modelo.prueba2, datos_binomial)) Se crea un modelo perfecto (así lo advierte R) con los parámetros y la función que han generado los datos. En este punto se recuerda la necesidad de deshacer la transformación sobre la variable dependiente, asunto tratado en el tema referente a la regresión lineal. prediccion$y &lt;- exp(prediccion$y)/(1 + exp(prediccion$y)) ggplot(data=datos_binomial, aes(x=x, y=y)) + geom_point() + geom_line(data = prediccion, aes(x=x, y=y), color=&quot;red&quot;) + labs(title = &quot;Regresión lineal sobre datos binomiales&quot;) Esa transformación \\(log(\\frac{p}{1-p})\\) ha permitido realizar un modelo lineal con sentido porque no se está modelizando el 1/0, se está modelizando la razón de probabilidades \\(log(\\frac{p}{1-p})\\) que es conocida como odds ratio, una razón que determina cuantas veces más se produce el 1 sobre el 0. Ya que no se puede modelizar cuando toma valor 0 o 1 se modeliza cuanto es más probable tener un 1 sobre un 0. Esa es la transformación llevada a cabo, es la función que enlaza el modelo lineal con la clasificación binomial. En el caso concreto de la regresión logística esta será la función de enlace que permite emplear un modelo lineal. Las funciones de enlace más empleadas son: Normal: \\(X\\beta = E[Y]\\) la media Binomial: \\(X\\beta = log(\\frac{p}{1-p})\\) función logística Poisson: \\(X\\beta = log(E[Y])\\) función logarítmica Gamma: \\(X\\beta = \\frac{1}{E[Y]}\\) función recíproca Para los GLM el método de estimación de los parámetros más adecuado no son los mínimos cuadrados y por ello se emplea la estimación por máxima verosimilitud que conceptualmente es parecida a la estimación de parámetros que se trató en el tema 12. Conocida la distribución y a partir de los datos disponibles, se busca el parámetro más verosímil. Existen distintos algoritmos capaces de encontrar estos parámetros. Si se desea profundizar más en aspectos teóricos sobre la estimación de los parámetros por este método se recomienda leer este enlace. 15.3 Regresión logística La regresión logística permite hacer clasificación binomial problema al que el científico de datos se enfrentará en múltiples ocasiones. En el ejemplo de trabajo se plantea un modelo de clasificación binomial que permita identificar que clientes son más propensos a contratar un seguro de automóviles dentro de la cartera de seguros de salud, lo que se conoce como un modelo de venta cruzada, habituales dentro del mundo del marketing analítico. En este caso una regresión logística se adecua a las necesidades del análisis. Para entender como trabaja una regresión logística se realiza un modelo sencillo con una sola variable, con los datos de trabajo se realiza un modelo únicamente con la variable Age. modelo.prueba3 &lt;- glm(data=train, formula=Response ~ Age, family = binomial) El código es completamente análogo al visto en los modelos de regresión lineal pero se emplea la función glm y es necesario indicar la función de enlace que en este caso es la que viene de la familia binomial. Sumarizando el modelo se tiene: summary(modelo.prueba3) ## ## Call: ## glm(formula = Response ~ Age, family = binomial, data = train) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.7718 -0.5431 -0.4564 -0.4304 2.2279 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.8053935 0.0138401 -202.70 &lt;2e-16 *** ## Age 0.0205494 0.0003028 67.87 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 283546 on 381108 degrees of freedom ## Residual deviance: 279044 on 381107 degrees of freedom ## AIC: 279048 ## ## Number of Fisher Scoring iterations: 4 La salida que ofrece es parecida a las ya trabajadas, lo primero es estudiar los parámetros y se aprecia que la variable es significativa aunque el valor del parámetro es próximo a 0 el test de parámetros se interpreta exactamente igual que en la regresión lineal. En este caso no aparece el \\(R^2\\) y si aparece el AIC (Akaike information criterion) que es una medida de lo bueno que es el modelo pero al contrario que el \\(R^2\\) no se va a establecer un valor de referencia, el modelo será mejor cuanto menor sea el AIC. Para estudiar como estima el modelo se retoma la función bivariable vista en el capítulo 11. bivariable &lt;- function(df, target, varib, ajuste=1){ target = as.symbol(target) fr_analisis = as.symbol(varib) g &lt;- df %&gt;% group_by(factor_analisis = as.factor(!!fr_analisis)) %&gt;% summarise(pct_clientes = round(n()*100/nrow(df),1), pct_interesados = round(sum(!!target)*100/n(),1), .groups=&#39;drop&#39;) %&gt;% ggplot(aes(x=factor_analisis)) + geom_line(aes(y=pct_interesados * ajuste), group=1, color=&quot;red&quot;) + geom_col(aes(y=pct_clientes),fill=&quot;yellow&quot;,alpha=0.5) + geom_text(size=3, aes(y=pct_interesados * ajuste, label = paste(pct_interesados,&#39; %&#39;)), color=&quot;red&quot;) + scale_y_continuous(sec.axis = sec_axis(~./ajuste, name=&quot;% interesados&quot;), name=&#39;% clientes&#39;) + theme_light() g + labs(title = paste0(&quot;Análisis de la variable &quot;,varib)) } bivariable_Age &lt;- bivariable(train, &#39;Response&#39;, &#39;Age&#39;, 0.5) Código ya conocido que genera un gráfico de análisis bivariable. Sobre este análisis se va a presentar la estimación del modelo. Se necesita cierto trabajo para poder llevar a cabo la representación gráfica . edades &lt;- seq(min(train$Age),max(train$Age)) edades &lt;- data.frame(Age=edades) edades$estimacion &lt;- predict(modelo.prueba3, newdata=edades, type=&#39;response&#39;) datatable(edades) Un paréntesis antes de graficar los resultados, se realiza la estimación para las posibles edades del conjunto de datos, del mínimo al máximo. Se emplea la función predict donde el nuevo conjunto de datos es ese posible rango de edades y es necesario especificar que se requiere la respuesta response ofrecida por el modelo. Es lo que permite realizar el gráfico, ahora se representa esa estimación sobre el análisis bivariable visto en el capítulo 11 del ensayo. bivariable_Age + geom_line(aes(y=edades$estimacion*50), group=1, color=&quot;blue&quot;) Recordar las particularidades de ggplot con los gráficos de dos ejes, es necesario transformar los datos en % * 100 pero se ajustaba la salida y por ello hay que multiplicar por 50 en vez de por 100. Se observa que el modelo tiene muchas deficiencias, es creciente, un modelo lineal no puede recoger esa forma que presenta la variable dependiente en función de Age ya que hay un comportamiento que claramente no es lineal. Sin embargo, si se considera la edad como un factor y se realiza el modelo: modelo.prueba4&lt;- glm(data=train, formula=Response ~ as.factor(Age), family = binomial) summary(modelo.prueba4) ## ## Call: ## glm(formula = Response ~ as.factor(Age), family = binomial, data = train) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.7204 -0.6476 -0.3774 -0.2691 2.6817 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -3.56797 0.07754 -46.013 &lt; 2e-16 *** ## as.factor(Age)21 0.24759 0.08842 2.800 0.005107 ** ## as.factor(Age)22 0.29174 0.08587 3.398 0.000680 *** ## as.factor(Age)23 0.30248 0.08472 3.571 0.000356 *** ## as.factor(Age)24 0.25619 0.08455 3.030 0.002444 ** ## as.factor(Age)25 0.26790 0.08617 3.109 0.001878 ** ## as.factor(Age)26 0.27343 0.09031 3.028 0.002464 ** ## as.factor(Age)27 0.48399 0.09074 5.334 9.61e-08 *** ## as.factor(Age)28 0.96198 0.08805 10.925 &lt; 2e-16 *** ## as.factor(Age)29 1.38871 0.08653 16.049 &lt; 2e-16 *** ## as.factor(Age)30 1.66058 0.08621 19.262 &lt; 2e-16 *** ## as.factor(Age)31 1.91254 0.08579 22.293 &lt; 2e-16 *** ## as.factor(Age)32 2.05752 0.08581 23.978 &lt; 2e-16 *** ## as.factor(Age)33 2.28218 0.08479 26.916 &lt; 2e-16 *** ## as.factor(Age)34 2.30242 0.08487 27.128 &lt; 2e-16 *** ## as.factor(Age)35 2.33283 0.08470 27.543 &lt; 2e-16 *** ## as.factor(Age)36 2.34491 0.08448 27.758 &lt; 2e-16 *** ## as.factor(Age)37 2.26224 0.08435 26.819 &lt; 2e-16 *** ## as.factor(Age)38 2.35143 0.08370 28.092 &lt; 2e-16 *** ## as.factor(Age)39 2.26013 0.08329 27.136 &lt; 2e-16 *** ## as.factor(Age)40 2.28025 0.08268 27.579 &lt; 2e-16 *** ## as.factor(Age)41 2.23558 0.08243 27.119 &lt; 2e-16 *** ## as.factor(Age)42 2.21995 0.08232 26.969 &lt; 2e-16 *** ## as.factor(Age)43 2.26662 0.08196 27.655 &lt; 2e-16 *** ## as.factor(Age)44 2.28299 0.08196 27.854 &lt; 2e-16 *** ## as.factor(Age)45 2.28422 0.08205 27.839 &lt; 2e-16 *** ## as.factor(Age)46 2.28268 0.08222 27.762 &lt; 2e-16 *** ## as.factor(Age)47 2.29418 0.08252 27.802 &lt; 2e-16 *** ## as.factor(Age)48 2.24835 0.08281 27.150 &lt; 2e-16 *** ## as.factor(Age)49 2.15788 0.08350 25.844 &lt; 2e-16 *** ## as.factor(Age)50 2.18506 0.08372 26.100 &lt; 2e-16 *** ## as.factor(Age)51 2.11262 0.08435 25.046 &lt; 2e-16 *** ## as.factor(Age)52 2.09206 0.08482 24.665 &lt; 2e-16 *** ## as.factor(Age)53 2.02006 0.08550 23.627 &lt; 2e-16 *** ## as.factor(Age)54 2.08587 0.08567 24.347 &lt; 2e-16 *** ## as.factor(Age)55 1.93729 0.08739 22.167 &lt; 2e-16 *** ## as.factor(Age)56 1.95468 0.08826 22.147 &lt; 2e-16 *** ## as.factor(Age)57 1.97065 0.08845 22.279 &lt; 2e-16 *** ## as.factor(Age)58 1.90287 0.08927 21.316 &lt; 2e-16 *** ## as.factor(Age)59 1.82662 0.09052 20.180 &lt; 2e-16 *** ## as.factor(Age)60 1.70544 0.09190 18.558 &lt; 2e-16 *** ## as.factor(Age)61 1.66613 0.09306 17.903 &lt; 2e-16 *** ## as.factor(Age)62 1.69095 0.09387 18.014 &lt; 2e-16 *** ## as.factor(Age)63 1.52839 0.09590 15.938 &lt; 2e-16 *** ## as.factor(Age)64 1.52817 0.09725 15.713 &lt; 2e-16 *** ## as.factor(Age)65 1.54144 0.09744 15.819 &lt; 2e-16 *** ## as.factor(Age)66 1.35226 0.10075 13.421 &lt; 2e-16 *** ## as.factor(Age)67 1.42705 0.10031 14.226 &lt; 2e-16 *** ## as.factor(Age)68 1.25633 0.10492 11.974 &lt; 2e-16 *** ## as.factor(Age)69 1.27491 0.10372 12.291 &lt; 2e-16 *** ## as.factor(Age)70 1.15465 0.10797 10.694 &lt; 2e-16 *** ## as.factor(Age)71 1.17697 0.11117 10.587 &lt; 2e-16 *** ## as.factor(Age)72 1.16631 0.11165 10.446 &lt; 2e-16 *** ## as.factor(Age)73 1.15352 0.11361 10.153 &lt; 2e-16 *** ## as.factor(Age)74 1.10648 0.11640 9.506 &lt; 2e-16 *** ## as.factor(Age)75 0.91885 0.12694 7.238 4.54e-13 *** ## as.factor(Age)76 1.08925 0.12668 8.598 &lt; 2e-16 *** ## as.factor(Age)77 0.85066 0.13568 6.270 3.62e-10 *** ## as.factor(Age)78 0.88765 0.14040 6.322 2.58e-10 *** ## as.factor(Age)79 0.91121 0.15443 5.900 3.63e-09 *** ## as.factor(Age)80 0.90027 0.15537 5.794 6.85e-09 *** ## as.factor(Age)81 1.00302 0.52464 1.912 0.055898 . ## as.factor(Age)82 0.23576 1.02065 0.231 0.817321 ## as.factor(Age)83 0.52344 1.02647 0.510 0.610088 ## as.factor(Age)84 -6.99806 36.02105 -0.194 0.845959 ## as.factor(Age)85 -6.99806 36.02105 -0.194 0.845959 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 283546 on 381108 degrees of freedom ## Residual deviance: 260606 on 381043 degrees of freedom ## AIC: 260738 ## ## Number of Fisher Scoring iterations: 9 Cada edad tiene un parámetro asociado y se puede apreciar que casi todos son significativos a excepción de las edades más avanzadas donde los parámetros no superan el test \\(\\beta_i=0\\), curiosamente en el capítulo 12 cuando se trataron los intervalos de confianza en esos mismos rangos de edad se obtenían unos intervalos muy amplios para la media y se llegó a la conclusión de que el número de clientes en edades avanzadas es susceptible de ser agrupado. De nuevo un tema visto con anterioridad puede resultar útil para mejorar el proceso de modelización. Volviendo con los parámetros, para transformar los modelos en probabilidad se tenía la siguiente función: \\[\\hat{p}(Y=1|X)=\\frac{exp({\\hat{\\beta_0}+\\hat{\\beta_1}X})}{1+exp({\\hat{\\beta_0}+\\hat{\\beta_1}X})}\\] Anteriormente se justificó por ser la transformación de la función de enlace. Para la edad más baja se tiene la siguiente estimación: \\[\\hat{p}(Y=1|X)=\\frac{exp({-3.56797})} {1 + exp({-3.56797})}\\] Se recuerda que no aparece el parámetro para Age=20 porque no es necesario, es el \\(\\beta_0\\), el nivel base y el resultado es 0.0274389, para Age=21 se tendría: \\[\\hat{p}(Y=1|X)=\\frac{exp({-3.56797+0.24759})} {1 + exp({-3.56797+0.24759})}\\] Con resultado: 0.0348786 y así para cada una de las edades. ¿Qué está estimando el modelo? Se va a entender con el siguiente código en R donde se une la media con la estimación del modelo. resumen &lt;- train %&gt;% group_by(Age) %&gt;% summarise(porcen_interesados = round(sum(Response)/n(),3)) resumen$prediccion &lt;- round(predict(modelo.prueba4, newdata = resumen, type = &quot;response&quot;),3) datatable(resumen) Si, el modelo con una sola variable está estimando la media porque es el estimador más verosímil en un modelo de clasificación binomial para una sola variable. La regresión logística está calculando la proporción de 1s para cada factor. Gráficamente. bivariable_Age + geom_line(aes(y=resumen$prediccion*50), group=1, color=&quot;blue&quot;) El modelo ajusta perfectamente la proporción de respuestas positivas, ¿es un buen modelo? Parece que sí, identifica perfectamente los porcentajes de respuestas positivas, esto se ha conseguido con un modelo que tiene un parámetro para cada edad y muchos parámetros implicaban mayor complejidad y esa complejidad está describiendo a la perfección el problema que se planteaba el científico de datos. Ahora bien, ¿el modelo se ha aprendido los datos? ¿qué pasaría con otros datos? Cuando un modelo se conoce a la perfección los datos con los que se entrena se comete un sobreajuste (overfitting en inglés) o una sobreparametrización. Un exceso de complejidad hace que el modelo conozca a la perfección los datos empleados para su entrenamiento. Se torna necesario probar el modelo con otro conjunto de datos y agrupar la variable independiente para identificar la tendencia pero sin ajustarse a la perfección a cada nivel del factor Age. En capítulos posteriores se verá como poder controlar esta sobreparametrización. El modelo de regresión logística está ajustando las medias de la proporción a los factores, entonces, si se cruzan factores no será necesario emplear una regresión logística ya que el cruce del múltiples factores daría un resultado muy similar, no exactamente el mismo debido a la estimación por máxima verosimilitud. Por ejemplo con dos factores. resumen &lt;- train %&gt;% group_by(Age, Gender) %&gt;% summarise(porcen_interesados=mean(Response)) datatable(resumen) Si se promedian 2 factores se tienen n*m niveles de factores, se complica esa estructura, sin embargo, un modelo con esos dos factores. modelo.prueba5 &lt;- glm(data=train, Response ~ as.factor(Age) + Gender, family=binomial) df &lt;- data.frame(Age = 22, Gender=&#39;Female&#39;) predict(modelo.prueba5, df, type=&quot;response&quot;) ## 1 ## 0.0343814 Los parámetros están recogiendo información del promedio de 1s de múltiples variables, en este caso factores. La regresión logística está microsegmentando el porcentaje de clientes interesados en función de las propias características de los clientes por lo que se dispone de una herramienta de clasificación binomial que permite tanto estimar como describir el comportamiento de una serie de variables independientes con una sola función matemática. A continuación se introducen más variables en el modelo. modelo &lt;- glm(data = train, Response ~ as.factor(Age) + Gender + Driving_License + as.factor(Region_Code) + as.factor(Previously_Insured) + Vehicle_Age + Vehicle_Damage + Annual_Premium + as.factor(Policy_Sales_Channel) + Vintage) summary(modelo) ## ## Call: ## glm(formula = Response ~ as.factor(Age) + Gender + Driving_License + ## as.factor(Region_Code) + as.factor(Previously_Insured) + ## Vehicle_Age + Vehicle_Damage + Annual_Premium + as.factor(Policy_Sales_Channel) + ## Vintage, data = train) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.47512 -0.19871 -0.04269 0.03564 1.12206 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -2.025e-01 1.630e-02 -12.429 &lt; 2e-16 *** ## as.factor(Age)21 2.608e-02 4.612e-03 5.656 1.55e-08 *** ## as.factor(Age)22 4.109e-02 4.813e-03 8.536 &lt; 2e-16 *** ## as.factor(Age)23 4.906e-02 4.804e-03 10.213 &lt; 2e-16 *** ## as.factor(Age)24 5.608e-02 4.801e-03 11.681 &lt; 2e-16 *** ## as.factor(Age)25 5.853e-02 4.895e-03 11.958 &lt; 2e-16 *** ## as.factor(Age)26 6.126e-02 5.115e-03 11.979 &lt; 2e-16 *** ## as.factor(Age)27 6.620e-02 5.281e-03 12.535 &lt; 2e-16 *** ## as.factor(Age)28 7.747e-02 5.427e-03 14.275 &lt; 2e-16 *** ## as.factor(Age)29 8.876e-02 5.612e-03 15.814 &lt; 2e-16 *** ## as.factor(Age)30 9.650e-02 5.819e-03 16.585 &lt; 2e-16 *** ## as.factor(Age)31 1.089e-01 5.998e-03 18.158 &lt; 2e-16 *** ## as.factor(Age)32 1.122e-01 6.156e-03 18.229 &lt; 2e-16 *** ## as.factor(Age)33 1.289e-01 6.194e-03 20.815 &lt; 2e-16 *** ## as.factor(Age)34 1.289e-01 6.607e-03 19.509 &lt; 2e-16 *** ## as.factor(Age)35 1.269e-01 6.646e-03 19.098 &lt; 2e-16 *** ## as.factor(Age)36 1.177e-01 6.612e-03 17.798 &lt; 2e-16 *** ## as.factor(Age)37 1.007e-01 6.528e-03 15.433 &lt; 2e-16 *** ## as.factor(Age)38 1.101e-01 6.466e-03 17.035 &lt; 2e-16 *** ## as.factor(Age)39 9.117e-02 6.331e-03 14.400 &lt; 2e-16 *** ## as.factor(Age)40 9.290e-02 6.224e-03 14.927 &lt; 2e-16 *** ## as.factor(Age)41 8.233e-02 6.157e-03 13.371 &lt; 2e-16 *** ## as.factor(Age)42 7.839e-02 6.128e-03 12.792 &lt; 2e-16 *** ## as.factor(Age)43 8.137e-02 6.084e-03 13.374 &lt; 2e-16 *** ## as.factor(Age)44 8.262e-02 6.098e-03 13.549 &lt; 2e-16 *** ## as.factor(Age)45 8.203e-02 6.119e-03 13.406 &lt; 2e-16 *** ## as.factor(Age)46 8.143e-02 6.154e-03 13.232 &lt; 2e-16 *** ## as.factor(Age)47 8.363e-02 6.218e-03 13.450 &lt; 2e-16 *** ## as.factor(Age)48 7.510e-02 6.254e-03 12.008 &lt; 2e-16 *** ## as.factor(Age)49 6.226e-02 6.329e-03 9.837 &lt; 2e-16 *** ## as.factor(Age)50 6.659e-02 6.389e-03 10.422 &lt; 2e-16 *** ## as.factor(Age)51 5.506e-02 6.454e-03 8.532 &lt; 2e-16 *** ## as.factor(Age)52 4.965e-02 6.524e-03 7.610 2.75e-14 *** ## as.factor(Age)53 4.369e-02 6.586e-03 6.634 3.27e-11 *** ## as.factor(Age)54 5.090e-02 6.672e-03 7.630 2.36e-14 *** ## as.factor(Age)55 2.992e-02 6.822e-03 4.386 1.16e-05 *** ## as.factor(Age)56 3.362e-02 6.975e-03 4.820 1.43e-06 *** ## as.factor(Age)57 4.039e-02 7.025e-03 5.749 9.01e-09 *** ## as.factor(Age)58 2.546e-02 7.079e-03 3.596 0.000323 *** ## as.factor(Age)59 2.243e-02 7.173e-03 3.127 0.001764 ** ## as.factor(Age)60 9.406e-03 7.211e-03 1.304 0.192067 ## as.factor(Age)61 4.050e-03 7.315e-03 0.554 0.579848 ## as.factor(Age)62 6.734e-03 7.456e-03 0.903 0.366405 ## as.factor(Age)63 -6.159e-03 7.470e-03 -0.825 0.409650 ## as.factor(Age)64 -4.305e-03 7.629e-03 -0.564 0.572550 ## as.factor(Age)65 -8.283e-04 7.672e-03 -0.108 0.914020 ## as.factor(Age)66 -1.873e-02 7.727e-03 -2.425 0.015326 * ## as.factor(Age)67 -1.322e-02 7.809e-03 -1.693 0.090449 . ## as.factor(Age)68 -2.141e-02 7.975e-03 -2.685 0.007248 ** ## as.factor(Age)69 -2.622e-02 7.893e-03 -3.322 0.000894 *** ## as.factor(Age)70 -3.107e-02 8.064e-03 -3.853 0.000117 *** ## as.factor(Age)71 -2.908e-02 8.403e-03 -3.461 0.000538 *** ## as.factor(Age)72 -2.742e-02 8.425e-03 -3.254 0.001138 ** ## as.factor(Age)73 -3.011e-02 8.578e-03 -3.511 0.000447 *** ## as.factor(Age)74 -3.347e-02 8.717e-03 -3.840 0.000123 *** ## as.factor(Age)75 -4.640e-02 9.104e-03 -5.097 3.46e-07 *** ## as.factor(Age)76 -3.705e-02 9.554e-03 -3.878 0.000105 *** ## as.factor(Age)77 -5.659e-02 9.576e-03 -5.909 3.44e-09 *** ## as.factor(Age)78 -4.764e-02 1.004e-02 -4.744 2.10e-06 *** ## as.factor(Age)79 -5.152e-02 1.119e-02 -4.606 4.11e-06 *** ## as.factor(Age)80 -4.306e-02 1.122e-02 -3.838 0.000124 *** ## as.factor(Age)81 -1.246e-02 4.042e-02 -0.308 0.757881 ## as.factor(Age)82 -4.133e-02 5.594e-02 -0.739 0.460009 ## as.factor(Age)83 -3.512e-02 6.413e-02 -0.548 0.583987 ## as.factor(Age)84 -1.042e-02 9.056e-02 -0.115 0.908437 ## as.factor(Age)85 -1.049e-01 9.055e-02 -1.158 0.246720 ## GenderMale 3.616e-03 9.952e-04 3.633 0.000280 *** ## Driving_License 8.001e-02 1.060e-02 7.548 4.43e-14 *** ## as.factor(Region_Code)1 2.296e-02 1.160e-02 1.979 0.047767 * ## as.factor(Region_Code)2 6.097e-02 8.288e-03 7.357 1.89e-13 *** ## as.factor(Region_Code)3 9.322e-02 7.466e-03 12.485 &lt; 2e-16 *** ## as.factor(Region_Code)4 9.494e-02 9.790e-03 9.698 &lt; 2e-16 *** ## as.factor(Region_Code)5 6.680e-02 1.079e-02 6.193 5.92e-10 *** ## as.factor(Region_Code)6 9.645e-02 7.788e-03 12.384 &lt; 2e-16 *** ## as.factor(Region_Code)7 7.161e-02 8.564e-03 8.362 &lt; 2e-16 *** ## as.factor(Region_Code)8 6.546e-02 7.020e-03 9.324 &lt; 2e-16 *** ## as.factor(Region_Code)9 4.991e-02 8.676e-03 5.752 8.83e-09 *** ## as.factor(Region_Code)10 7.903e-02 8.177e-03 9.665 &lt; 2e-16 *** ## as.factor(Region_Code)11 1.113e-01 7.490e-03 14.864 &lt; 2e-16 *** ## as.factor(Region_Code)12 8.182e-02 8.624e-03 9.487 &lt; 2e-16 *** ## as.factor(Region_Code)13 7.242e-02 8.271e-03 8.756 &lt; 2e-16 *** ## as.factor(Region_Code)14 8.754e-02 8.086e-03 10.826 &lt; 2e-16 *** ## as.factor(Region_Code)15 5.820e-02 7.308e-03 7.964 1.67e-15 *** ## as.factor(Region_Code)16 6.385e-02 9.537e-03 6.695 2.16e-11 *** ## as.factor(Region_Code)17 6.678e-02 8.989e-03 7.428 1.10e-13 *** ## as.factor(Region_Code)18 1.051e-01 7.990e-03 13.148 &lt; 2e-16 *** ## as.factor(Region_Code)19 7.823e-02 1.022e-02 7.655 1.93e-14 *** ## as.factor(Region_Code)20 3.551e-02 9.664e-03 3.674 0.000239 *** ## as.factor(Region_Code)21 8.482e-02 8.210e-03 10.331 &lt; 2e-16 *** ## as.factor(Region_Code)22 5.283e-02 1.072e-02 4.930 8.23e-07 *** ## as.factor(Region_Code)23 9.643e-02 9.580e-03 10.066 &lt; 2e-16 *** ## as.factor(Region_Code)24 7.965e-02 9.251e-03 8.610 &lt; 2e-16 *** ## as.factor(Region_Code)25 5.860e-02 9.070e-03 6.462 1.04e-10 *** ## as.factor(Region_Code)26 3.729e-02 9.208e-03 4.049 5.14e-05 *** ## as.factor(Region_Code)27 5.382e-02 8.834e-03 6.092 1.12e-09 *** ## as.factor(Region_Code)28 8.940e-02 6.865e-03 13.024 &lt; 2e-16 *** ## as.factor(Region_Code)29 1.104e-01 7.379e-03 14.963 &lt; 2e-16 *** ## as.factor(Region_Code)30 9.377e-02 7.330e-03 12.793 &lt; 2e-16 *** ## as.factor(Region_Code)31 4.423e-02 9.806e-03 4.510 6.47e-06 *** ## as.factor(Region_Code)32 7.584e-02 8.860e-03 8.559 &lt; 2e-16 *** ## as.factor(Region_Code)33 8.125e-02 7.620e-03 10.662 &lt; 2e-16 *** ## as.factor(Region_Code)34 3.987e-02 1.001e-02 3.982 6.84e-05 *** ## as.factor(Region_Code)35 1.028e-01 7.718e-03 13.318 &lt; 2e-16 *** ## as.factor(Region_Code)36 6.626e-02 7.527e-03 8.803 &lt; 2e-16 *** ## as.factor(Region_Code)37 5.485e-02 7.936e-03 6.912 4.80e-12 *** ## as.factor(Region_Code)38 9.695e-02 9.503e-03 10.201 &lt; 2e-16 *** ## as.factor(Region_Code)39 6.630e-02 8.108e-03 8.177 2.91e-16 *** ## as.factor(Region_Code)40 5.920e-02 1.074e-02 5.510 3.59e-08 *** ## as.factor(Region_Code)41 1.005e-01 7.175e-03 14.012 &lt; 2e-16 *** ## as.factor(Region_Code)42 4.686e-02 1.408e-02 3.328 0.000874 *** ## as.factor(Region_Code)43 5.055e-02 8.950e-03 5.648 1.63e-08 *** ## as.factor(Region_Code)44 5.405e-02 1.255e-02 4.306 1.66e-05 *** ## as.factor(Region_Code)45 8.110e-02 7.884e-03 10.287 &lt; 2e-16 *** ## as.factor(Region_Code)46 8.302e-02 7.132e-03 11.640 &lt; 2e-16 *** ## as.factor(Region_Code)47 5.210e-02 7.686e-03 6.778 1.22e-11 *** ## as.factor(Region_Code)48 2.296e-02 8.251e-03 2.783 0.005384 ** ## as.factor(Region_Code)49 4.285e-02 9.759e-03 4.390 1.13e-05 *** ## as.factor(Region_Code)50 5.527e-02 7.509e-03 7.361 1.83e-13 *** ## as.factor(Region_Code)51 8.318e-02 2.318e-02 3.588 0.000333 *** ## as.factor(Region_Code)52 7.050e-02 1.957e-02 3.603 0.000314 *** ## as.factor(Previously_Insured)1 -8.774e-02 1.761e-03 -49.837 &lt; 2e-16 *** ## Vehicle_Age&gt; 2 Years 3.967e-02 4.204e-03 9.435 &lt; 2e-16 *** ## Vehicle_Age1-2 Year -1.801e-02 3.341e-03 -5.391 7.00e-08 *** ## Vehicle_DamageYes 1.252e-01 1.766e-03 70.904 &lt; 2e-16 *** ## Annual_Premium 2.601e-07 3.271e-08 7.949 1.88e-15 *** ## as.factor(Policy_Sales_Channel)2 1.034e-01 1.502e-01 0.688 0.491175 ## as.factor(Policy_Sales_Channel)3 2.028e-01 1.633e-02 12.418 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)4 1.208e-01 1.645e-02 7.342 2.10e-13 *** ## as.factor(Policy_Sales_Channel)6 -2.165e-02 1.734e-01 -0.125 0.900641 ## as.factor(Policy_Sales_Channel)7 1.093e-01 1.234e-02 8.856 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)8 8.483e-02 1.268e-02 6.692 2.21e-11 *** ## as.factor(Policy_Sales_Channel)9 1.062e-01 2.570e-02 4.131 3.62e-05 *** ## as.factor(Policy_Sales_Channel)10 1.071e-01 2.108e-02 5.083 3.71e-07 *** ## as.factor(Policy_Sales_Channel)11 6.288e-02 1.312e-02 4.793 1.64e-06 *** ## as.factor(Policy_Sales_Channel)12 9.958e-02 1.457e-02 6.833 8.31e-12 *** ## as.factor(Policy_Sales_Channel)13 8.295e-02 1.194e-02 6.949 3.69e-12 *** ## as.factor(Policy_Sales_Channel)14 1.042e-01 1.561e-02 6.676 2.46e-11 *** ## as.factor(Policy_Sales_Channel)15 1.273e-01 1.458e-02 8.733 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)16 9.987e-02 1.657e-02 6.028 1.66e-09 *** ## as.factor(Policy_Sales_Channel)17 1.655e-01 7.562e-02 2.188 0.028676 * ## as.factor(Policy_Sales_Channel)18 6.340e-02 2.529e-02 2.507 0.012189 * ## as.factor(Policy_Sales_Channel)19 7.742e-02 2.236e-02 3.462 0.000535 *** ## as.factor(Policy_Sales_Channel)20 1.017e-01 5.871e-02 1.731 0.083391 . ## as.factor(Policy_Sales_Channel)21 7.888e-02 2.653e-02 2.974 0.002944 ** ## as.factor(Policy_Sales_Channel)22 7.542e-02 1.968e-02 3.831 0.000127 *** ## as.factor(Policy_Sales_Channel)23 9.739e-02 1.752e-02 5.558 2.72e-08 *** ## as.factor(Policy_Sales_Channel)24 8.976e-02 1.463e-02 6.135 8.50e-10 *** ## as.factor(Policy_Sales_Channel)25 1.392e-01 1.196e-02 11.641 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)26 1.355e-01 9.730e-03 13.925 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)27 2.190e-01 1.734e-01 1.263 0.206633 ## as.factor(Policy_Sales_Channel)28 2.562e-01 1.734e-01 1.478 0.139502 ## as.factor(Policy_Sales_Channel)29 8.458e-02 1.416e-02 5.973 2.33e-09 *** ## as.factor(Policy_Sales_Channel)30 8.334e-02 1.259e-02 6.622 3.56e-11 *** ## as.factor(Policy_Sales_Channel)31 1.518e-01 1.536e-02 9.881 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)32 5.270e-02 6.615e-02 0.797 0.425610 ## as.factor(Policy_Sales_Channel)33 -1.206e-01 1.734e-01 -0.696 0.486584 ## as.factor(Policy_Sales_Channel)34 -8.041e-02 1.734e-01 -0.464 0.642816 ## as.factor(Policy_Sales_Channel)35 7.748e-02 3.595e-02 2.155 0.031160 * ## as.factor(Policy_Sales_Channel)36 2.098e-01 4.270e-02 4.913 8.96e-07 *** ## as.factor(Policy_Sales_Channel)37 6.057e-02 2.619e-02 2.313 0.020734 * ## as.factor(Policy_Sales_Channel)38 3.946e-03 9.531e-02 0.041 0.966971 ## as.factor(Policy_Sales_Channel)39 -2.210e-02 9.531e-02 -0.232 0.816652 ## as.factor(Policy_Sales_Channel)40 5.717e-02 7.802e-02 0.733 0.463671 ## as.factor(Policy_Sales_Channel)41 1.346e-01 3.000e-01 0.449 0.653655 ## as.factor(Policy_Sales_Channel)42 1.227e-01 2.785e-02 4.407 1.05e-05 *** ## as.factor(Policy_Sales_Channel)43 8.251e-01 3.000e-01 2.751 0.005946 ** ## as.factor(Policy_Sales_Channel)44 1.278e-01 3.137e-02 4.074 4.63e-05 *** ## as.factor(Policy_Sales_Channel)45 3.994e-02 4.480e-02 0.892 0.372588 ## as.factor(Policy_Sales_Channel)46 -2.420e-02 7.558e-02 -0.320 0.748841 ## as.factor(Policy_Sales_Channel)47 5.804e-02 3.901e-02 1.488 0.136787 ## as.factor(Policy_Sales_Channel)48 1.677e-02 6.775e-02 0.248 0.804448 ## as.factor(Policy_Sales_Channel)49 1.151e-01 8.072e-02 1.426 0.153954 ## as.factor(Policy_Sales_Channel)50 -1.175e-01 2.122e-01 -0.553 0.579929 ## as.factor(Policy_Sales_Channel)51 2.872e-02 8.710e-02 0.330 0.741608 ## as.factor(Policy_Sales_Channel)52 6.373e-02 1.340e-02 4.756 1.98e-06 *** ## as.factor(Policy_Sales_Channel)53 1.257e-01 5.388e-02 2.333 0.019634 * ## as.factor(Policy_Sales_Channel)54 6.183e-02 3.151e-02 1.962 0.049758 * ## as.factor(Policy_Sales_Channel)55 8.569e-02 1.287e-02 6.659 2.77e-11 *** ## as.factor(Policy_Sales_Channel)56 1.024e-01 3.844e-02 2.663 0.007736 ** ## as.factor(Policy_Sales_Channel)57 4.977e-02 1.344e-01 0.370 0.711238 ## as.factor(Policy_Sales_Channel)58 1.727e-02 1.004e-01 0.172 0.863440 ## as.factor(Policy_Sales_Channel)59 1.062e-01 2.833e-02 3.747 0.000179 *** ## as.factor(Policy_Sales_Channel)60 6.615e-02 1.637e-02 4.042 5.31e-05 *** ## as.factor(Policy_Sales_Channel)61 5.071e-02 1.579e-02 3.211 0.001321 ** ## as.factor(Policy_Sales_Channel)62 1.742e-01 1.228e-01 1.419 0.155978 ## as.factor(Policy_Sales_Channel)63 9.071e-02 6.951e-02 1.305 0.191870 ## as.factor(Policy_Sales_Channel)64 3.998e-02 3.333e-02 1.199 0.230443 ## as.factor(Policy_Sales_Channel)65 4.454e-02 4.032e-02 1.105 0.269230 ## as.factor(Policy_Sales_Channel)66 8.533e-02 7.138e-02 1.196 0.231886 ## as.factor(Policy_Sales_Channel)67 -1.625e-01 1.502e-01 -1.082 0.279332 ## as.factor(Policy_Sales_Channel)68 2.819e-01 1.503e-01 1.876 0.060686 . ## as.factor(Policy_Sales_Channel)69 1.550e-01 1.228e-01 1.262 0.207003 ## as.factor(Policy_Sales_Channel)70 -1.174e-01 1.503e-01 -0.781 0.434588 ## as.factor(Policy_Sales_Channel)71 -4.776e-02 1.344e-01 -0.355 0.722417 ## as.factor(Policy_Sales_Channel)73 -2.797e-02 8.374e-02 -0.334 0.738339 ## as.factor(Policy_Sales_Channel)74 -3.392e-02 2.122e-01 -0.160 0.873011 ## as.factor(Policy_Sales_Channel)75 -3.801e-02 2.122e-01 -0.179 0.857874 ## as.factor(Policy_Sales_Channel)76 4.218e-02 1.502e-01 0.281 0.778925 ## as.factor(Policy_Sales_Channel)78 1.274e-01 6.328e-02 2.014 0.044054 * ## as.factor(Policy_Sales_Channel)79 -1.480e-01 1.228e-01 -1.206 0.227947 ## as.factor(Policy_Sales_Channel)80 2.131e-01 8.073e-02 2.639 0.008312 ** ## as.factor(Policy_Sales_Channel)81 2.623e-01 8.072e-02 3.249 0.001159 ** ## as.factor(Policy_Sales_Channel)82 -1.142e-04 1.502e-01 -0.001 0.999393 ## as.factor(Policy_Sales_Channel)83 2.253e-02 1.502e-01 0.150 0.880758 ## as.factor(Policy_Sales_Channel)84 1.339e-01 3.000e-01 0.446 0.655404 ## as.factor(Policy_Sales_Channel)86 1.194e-01 4.438e-02 2.691 0.007123 ** ## as.factor(Policy_Sales_Channel)87 1.759e-01 1.138e-01 1.546 0.122033 ## as.factor(Policy_Sales_Channel)88 -3.395e-02 5.245e-02 -0.647 0.517512 ## as.factor(Policy_Sales_Channel)89 8.350e-02 8.079e-02 1.034 0.301306 ## as.factor(Policy_Sales_Channel)90 1.978e-01 5.962e-02 3.317 0.000910 *** ## as.factor(Policy_Sales_Channel)91 1.204e-01 2.580e-02 4.667 3.05e-06 *** ## as.factor(Policy_Sales_Channel)92 1.158e-01 6.198e-02 1.868 0.061811 . ## as.factor(Policy_Sales_Channel)93 5.256e-02 5.752e-02 0.914 0.360841 ## as.factor(Policy_Sales_Channel)94 1.388e-01 4.531e-02 3.063 0.002189 ** ## as.factor(Policy_Sales_Channel)95 9.178e-03 1.004e-01 0.091 0.927193 ## as.factor(Policy_Sales_Channel)96 2.706e-02 7.565e-02 0.358 0.720612 ## as.factor(Policy_Sales_Channel)97 1.071e-01 8.394e-02 1.276 0.201982 ## as.factor(Policy_Sales_Channel)98 3.552e-02 6.644e-02 0.535 0.592911 ## as.factor(Policy_Sales_Channel)99 3.265e-02 1.138e-01 0.287 0.774302 ## as.factor(Policy_Sales_Channel)100 1.848e-01 1.065e-01 1.735 0.082672 . ## as.factor(Policy_Sales_Channel)101 1.737e-01 1.138e-01 1.526 0.126970 ## as.factor(Policy_Sales_Channel)102 5.442e-02 1.734e-01 0.314 0.753636 ## as.factor(Policy_Sales_Channel)103 1.062e-01 3.684e-02 2.883 0.003937 ** ## as.factor(Policy_Sales_Channel)104 -9.099e-03 1.345e-01 -0.068 0.946071 ## as.factor(Policy_Sales_Channel)105 9.677e-02 1.734e-01 0.558 0.576763 ## as.factor(Policy_Sales_Channel)106 1.703e-01 4.274e-02 3.984 6.78e-05 *** ## as.factor(Policy_Sales_Channel)107 5.761e-02 4.195e-02 1.373 0.169662 ## as.factor(Policy_Sales_Channel)108 4.146e-02 4.972e-02 0.834 0.404364 ## as.factor(Policy_Sales_Channel)109 5.018e-02 2.469e-02 2.032 0.042115 * ## as.factor(Policy_Sales_Channel)110 3.507e-02 9.095e-02 0.386 0.699785 ## as.factor(Policy_Sales_Channel)111 5.928e-02 3.763e-02 1.575 0.115242 ## as.factor(Policy_Sales_Channel)112 -7.608e-02 2.123e-01 -0.358 0.720031 ## as.factor(Policy_Sales_Channel)113 9.392e-02 3.109e-02 3.021 0.002519 ** ## as.factor(Policy_Sales_Channel)114 5.521e-02 6.327e-02 0.873 0.382875 ## as.factor(Policy_Sales_Channel)115 7.204e-02 1.502e-01 0.479 0.631596 ## as.factor(Policy_Sales_Channel)116 7.350e-02 2.604e-02 2.823 0.004762 ** ## as.factor(Policy_Sales_Channel)117 8.470e-02 1.138e-01 0.744 0.456588 ## as.factor(Policy_Sales_Channel)118 1.624e-02 7.138e-02 0.228 0.819970 ## as.factor(Policy_Sales_Channel)119 8.702e-02 3.111e-02 2.797 0.005154 ** ## as.factor(Policy_Sales_Channel)120 9.244e-02 1.465e-02 6.310 2.80e-10 *** ## as.factor(Policy_Sales_Channel)121 2.079e-01 3.872e-02 5.369 7.93e-08 *** ## as.factor(Policy_Sales_Channel)122 1.026e-01 1.016e-02 10.093 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)123 8.315e-01 3.000e-01 2.772 0.005574 ** ## as.factor(Policy_Sales_Channel)124 1.113e-01 9.743e-03 11.422 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)125 6.989e-02 1.349e-02 5.182 2.20e-07 *** ## as.factor(Policy_Sales_Channel)126 2.636e-02 1.344e-01 0.196 0.844544 ## as.factor(Policy_Sales_Channel)127 5.014e-02 3.046e-02 1.646 0.099707 . ## as.factor(Policy_Sales_Channel)128 9.174e-02 2.761e-02 3.323 0.000891 *** ## as.factor(Policy_Sales_Channel)129 3.946e-02 4.629e-02 0.852 0.394008 ## as.factor(Policy_Sales_Channel)130 1.274e-01 6.477e-02 1.967 0.049209 * ## as.factor(Policy_Sales_Channel)131 4.284e-02 2.914e-02 1.470 0.141518 ## as.factor(Policy_Sales_Channel)132 4.679e-02 3.940e-02 1.188 0.234990 ## as.factor(Policy_Sales_Channel)133 7.919e-02 3.452e-02 2.294 0.021791 * ## as.factor(Policy_Sales_Channel)134 4.990e-02 9.532e-02 0.523 0.600660 ## as.factor(Policy_Sales_Channel)135 5.318e-02 3.146e-02 1.691 0.090896 . ## as.factor(Policy_Sales_Channel)136 1.424e-01 2.417e-02 5.895 3.76e-09 *** ## as.factor(Policy_Sales_Channel)137 3.294e-02 1.065e-01 0.309 0.757229 ## as.factor(Policy_Sales_Channel)138 7.070e-02 2.877e-02 2.458 0.013990 * ## as.factor(Policy_Sales_Channel)139 3.679e-02 2.689e-02 1.368 0.171340 ## as.factor(Policy_Sales_Channel)140 3.119e-02 3.066e-02 1.017 0.308933 ## as.factor(Policy_Sales_Channel)143 -2.230e-02 3.001e-01 -0.074 0.940756 ## as.factor(Policy_Sales_Channel)144 1.397e-01 3.000e-01 0.466 0.641365 ## as.factor(Policy_Sales_Channel)145 1.220e-01 2.538e-02 4.806 1.54e-06 *** ## as.factor(Policy_Sales_Channel)146 3.119e-02 7.573e-02 0.412 0.680461 ## as.factor(Policy_Sales_Channel)147 1.146e-01 2.415e-02 4.744 2.10e-06 *** ## as.factor(Policy_Sales_Channel)148 9.711e-02 3.607e-02 2.692 0.007096 ** ## as.factor(Policy_Sales_Channel)149 -1.444e-01 3.000e-01 -0.481 0.630198 ## as.factor(Policy_Sales_Channel)150 1.317e-01 1.954e-02 6.742 1.57e-11 *** ## as.factor(Policy_Sales_Channel)151 2.924e-02 1.068e-02 2.737 0.006200 ** ## as.factor(Policy_Sales_Channel)152 3.844e-02 9.547e-03 4.026 5.67e-05 *** ## as.factor(Policy_Sales_Channel)153 5.023e-02 1.545e-02 3.250 0.001153 ** ## as.factor(Policy_Sales_Channel)154 1.268e-01 1.045e-02 12.130 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)155 2.001e-01 1.294e-02 15.465 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)156 9.738e-02 1.013e-02 9.615 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)157 1.430e-01 1.040e-02 13.755 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)158 1.521e-01 1.663e-02 9.148 &lt; 2e-16 *** ## as.factor(Policy_Sales_Channel)159 4.413e-02 4.307e-02 1.025 0.305456 ## as.factor(Policy_Sales_Channel)160 2.236e-02 9.794e-03 2.283 0.022418 * ## as.factor(Policy_Sales_Channel)163 1.778e-01 1.115e-02 15.947 &lt; 2e-16 *** ## Vintage 3.497e-07 5.806e-06 0.060 0.951977 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 0.08987578) ## ## Null deviance: 40985 on 381108 degrees of freedom ## Residual deviance: 34227 on 380829 degrees of freedom ## AIC: 163606 ## ## Number of Fisher Scoring iterations: 2 Esta estructura es de difícil interpretación ya que se disponen de múltiples factores con muchos niveles, es necesario un paso previo de agrupación de niveles que se ha tratado en capítulos anteriores. Hay variables cuantitativas como Annual_Premium que pueden tener comportamientos no lineales por lo que podría ser interesante realizar un ejercicio previo de tramificación de esta variable cuantitativa. En este proceso de modelización se está poniendo de relieve la importancia de todos los capítulos anteriores ya que se está esbozando la necesidad de seguir una serie de pasos como: Describir numéricamente y gráficamente las variables que van a participar en el proceso de modelización Determinar que problemas presentan los datos tanto en observaciones como en variables para establecer cuales de ellas van a participar en ese proceso Analizar de forma bivariable las variables y las observaciones seleccionadas frente a la variable respuesta Muestrear los datos para seleccionar los datos que van a entrenar el modelo y los que van a testear los resultados Comenzar a realizar modelos y experimentar con los resultados Medir la capacidad predictiva del modelo  Es decir, es necesario establecer un método de modelización estadística que se verá en el siguiente capítulo del ensayo. 15.4 Regresión de poisson Otro de los modelos GLM que debe conocer un científico de datos antes de empezar a realizar modelos más complejos es la regresión de poisson. Para ilustrar la regresión de poisson no es posible emplear los datos de trabajo ya que el problema a estudiar, si un cliente se muestra o no interesado, es un prototipo de clasificación binomial y con la regresión de poisson se estiman/describen número de eventos en un espacio de tiempo. Por este motivo es necesario seleccionar otros datos para mostrar como trabajan este tipo de modelos generalizados. En este caso, los datos son los empleados en algunos ejercicios del libro Non-Life Insurance Pricin with GLM y corresponden a una cartera de motos de una compañía aseguradora. Las variables disponibles son la edad, sexo, zona de circulación, clase de la moto, antigüedad de la moto, bonificación del conductor, exposición en años, número de siniestros y el importe de los mismos. library(tidyverse) library(DT) varib &lt;- c(edad = 2L, sexo = 1L, zona = 1L, clase_moto = 1L, antveh = 2L, bonus = 1L, exposicion = 8L, nsin = 4L, impsin = 8L) varib.classes &lt;- c(&quot;integer&quot;, rep(&quot;factor&quot;, 3), &quot;integer&quot;, &quot;factor&quot;, &quot;numeric&quot;, rep(&quot;integer&quot;, 2)) #con &lt;- url(&quot;http://staff.math.su.se/esbj/GLMbook/mccase.txt&quot;) con &lt;- &quot;./data/mccase.txt&quot; moto &lt;- read.fwf(con, widths = varib, header = FALSE, col.names = names(varib), colClasses = varib.classes, na.strings = NULL, comment.char = &quot;&quot;) datatable(head(moto)) El conjunto de datos está disponible en la web pero se ha subido al repositorio de github para facilitar su lectura. En este caso, el modelo que le interesa al científico de datos es uno que estime o describa el número de siniestros nsin en un periodo de tiempo. En los datos actuariales el periodo de tiempo lo marca la exposición al riesgo, campo exposicion en el conjunto de datos. La exposición es el número de días que está expuesto ese riesgo entre el número total de días de exposición, habitualmente un año. Por ejemplo, si una póliza se da de alta el 31/03/2022 de un año y se analizan los datos a año cerrado estará expuesta (31/12/2022 - 31/03/2022) / (31/12/2022-01/01/2022). No es el objeto de este ensayo conocer en profundidad las matizaciones de los datos actuariales, pero al número de siniestros en el periodo de exposición se le conoce como frecuencia siniestral y es lo que se pretende modelizar mediante regresión de poisson. A modo de ejemplo, para calcular la frecuencia siniestral por edad en el conjunto de datos de trabajo se tiene. frec.siniestral &lt;- moto %&gt;% group_by(edad) %&gt;% summarise(exposicion = sum(exposicion), frecuencia = sum(nsin)/sum(exposicion)) datatable(frec.siniestral) Al igual que sucedía con el ejercicio de marketing analítico es evidente que hay que trabajar las variables. ¿Por qué aparecen edades a 0? ¿Puede haber menores de 18 años? ¿Tendrán sentido niveles de factores con baja exposición? El trabajo del científico de datos siempre empieza en el mismo punto, conocer y depurar los datos. Otra situación habitual que se produce cuando se trabajen con datos con exposición al riesgo es la aparición de expuestos con valor 0 y siempre es necesario realizar la correspondiente comprobación. sum(moto$exposicion==0) ## [1] 2074 Aparecen 2074 riesgos con exposición 0 que no se deben emplear. En este ejemplo y para agilizar el trabajo se eliminan observaciones con edad inferior a 18 y con exposición 0 pero sirva este ejemplo para recalcar la importancia que tienen las fases previas de conocimiento a la hora de realizar modelos estadísticos y reiterar la importancia de trabajar en un método. En este ejemplo se crea una función análoga a la función bivariable empleada en la clasificación binomial pero que permite describir exposición y frecuencia siniestral de forma bivariable. moto &lt;- moto %&gt;% filter(edad&gt;=18 &amp; exposicion&gt;0) describe_frecuencia &lt;- function (df,varib) { columna&lt;-as.symbol(varib) resumen &lt;- df %&gt;% group_by(!!columna) %&gt;% summarise(porcen_exposicion = round(sum(exposicion)*100/sum(df$exposicion),1), frecuencia = round(sum(nsin)*100/sum(exposicion),1)) g2 &lt;- ggplot(resumen, aes(x=factor(!!columna))) + geom_col(aes(y=porcen_exposicion),fill=&quot;yellow&quot;,alpha=0.5) + geom_line(aes(y=frecuencia*4), group=1, color=&quot;red&quot;) + geom_text(aes(y=frecuencia*4, label = paste(frecuencia,&quot;%&quot;)), color=&quot;red&quot;) + scale_y_continuous(sec.axis = sec_axis(~./4), name=&quot;&quot;) + ggtitle(paste0(&quot;Análisis de frecuencia siniestral para &quot;, varib)) + theme_light() g2} describe_frecuencia(moto, &#39;edad&#39;) Ese comportamiento en la frecuencia siniestral es el que se desea estudiar, esa es la variable respuesta. De forma bivariable se tiene que edades más bajas incrementan su frecuencia sobre todo en edades de 22 años a 25, a partir de 35 años parece más estable hasta los 60 donde se produce un repunte, pero hay que tener en cuenta la baja exposición en rangos de edad mayores. Esta es la interpretación para una sola variable, ¿qué hace el GLM con esta situación? modelo.poisson1 &lt;- glm(data=moto, formula = nsin ~ as.factor(edad) , family = poisson(link=&#39;log&#39;), offset=log(exposicion)) Es necesario puntualizar como se especifica este modelo con glm. Se va a modelizar la frecuencia, es decir, nsin/exposicion pero la exposición es un valor de ponderación, es un coeficiente predeterminado y ese dato predeterminado se introduce mediante la opción offset. También es posible formular el modelo del siguiente modo: modelo.poisson1 &lt;- glm(data=moto, formula = nsin ~ as.factor(edad) + offset(log(exposicion)), family = poisson) Con esta otra formulación puede entenderse mejor como es su papel en la estructura del modelo. Por otro lado se pondera por log(exposicion) debido a la propia formulación del modelo. \\[nsin/exposicion = e^{\\beta_iX_i + \\epsilon} +\\] Se tiene que transformar en un modelo aditivo por lo que hay que emplear el logaritmo. \\[log(nsin/exposicion)=\\beta_iX_i + \\epsilon\\] \\[log(nsin) = \\beta_iX_i + log(exposicion) + \\epsilon\\] Esta transformación hará que los parámetros de la regresión de poisson tengan una fácil interpretación. Viendo los parámetros obtenidos con el modelo se entenderá mejor. # Edades en el conjunto de datos edades &lt;- moto %&gt;% select(edad) %&gt;% unique() # A las distintas edades se añade la frecuencia siniestral frec.siniestral &lt;- moto %&gt;% group_by(edad) %&gt;% summarise(exposicion = sum(exposicion), frecuencia = sum(nsin)/sum(exposicion)) edades &lt;- edades %&gt;% left_join(frec.siniestral) # Se añaden los coeficientes del modelo y el exponencial de los mismos edades &lt;- edades %&gt;% mutate(coeficientes = modelo.poisson1$coefficients, relatividad = exp(coeficientes)) datatable(edades) Se realiza el \\(exp(\\beta_i)\\) porque hay que pasar de la estructura aditiva a la estructura multiplicativa y así facilitar la interpretación de los parámetros. De este modo, la frecuencia siniestral para los 18 años es muy parecido al \\(exp(\\beta_0)\\), eso es porque es el \\(\\beta_0\\), se recuerda, el término independiente, el nivel base. De ahí parten las estimaciones del modelo que en este caso de forma multiplicativa serían nivel base * parámetro. Ejemplo, para los 25 años la frecuencia estimada sería 0.0316873 que es la frecuencia siniestral para esa edad, la frecuencia siniestra se reduce un 18% (1-0.8197) para la edad de 18 años, está relativizando al nivel base. Está sucediendo lo mismo que sucedía en la regresión logística, la estimación para una sola variable ajusta a la perfección a los datos. Evidentemente, el primer paso sería determinar que parámetros son significativos, pero el ejercicio pretende mostrar como se formula una regresión de poisson, los elementos necesarios para realizar el modelo, como estima el modelo y sobre todo como se interpretan los parámetros. Estos parámetros puestos de forma multiplicativa mediante \\(exp(\\beta_i)\\) están relativizando el nivel base, se pueden interpretar como recargos y descuentos que corrigen un nivel base y por ello son muy habituales en el mundo actuarial. La modelización y los resultados son perfectamente extrapolables a la situación con más variables. Se sugiere realizar el ejercicio. 15.5 Los GLM y el concepto microsegmento Este apartado del capítulo es un homenajea esta entrada del blog de JL Cañadas y sirve para entender como es la estructura que está creando un GLM y porque permite interpretar los resultados del modelo. Se ha hecho referencia a que los parámetros están creando microsegmentos y se ha demostrado que los modelos están ajustando a la proporción en la regresión logística y a la frecuencia en la regresión de poisson. Entonces, si el conjunto de datos está agregado por los factores que se van a emplear en la modelización y se pondera por el número de observaciones o por la exposición, ¿qué sucederá? #Se trabaja con una muestra para agilizar las ejecuciones. muestra &lt;- train %&gt;% sample_frac(0.10) %&gt;% mutate(Age = as.factor(Age)) modelo.sin.agregar &lt;- glm(Response ~ Age + Gender + Vehicle_Age, muestra, family=binomial) agr &lt;- muestra %&gt;% group_by(Age, Gender, Vehicle_Age, Response) %&gt;% summarise(Clientes=n()) modelo.con.agregacion = glm(Response ~ Age + Gender + Vehicle_Age, agr, family=binomial, weights = Clientes) df &lt;- data.frame(coef.sin.agregar = modelo.sin.agregar$coefficients, coef.con.agregacion = modelo.con.agregacion$coefficients) datatable(df) Los coeficientes son prácticamente los mismos pero un conjunto de datos tiene decenas de miles de observaciones y otro conjunto de datos tiene 558. Esto es porque el modelo está estimando proporciones para el cruce de factores y ese producto cartesiano de niveles de factores no deja de ser un grupo de clientes por lo que se puede modelizar el comportamiento de cada microsegmento de observaciones con las mismas características siempre y cuando se pondere por el tamaño de ese segmento. Se puede proceder del mismo modo con la regresión de poisson. modelo.sin.agregar &lt;- glm(data=moto, formula = nsin ~ as.factor(edad) + sexo, family = poisson, offset=log(exposicion)) agr &lt;- moto %&gt;% group_by(edad,sexo) %&gt;% summarise(nsin=sum(nsin),exposicion=sum(exposicion)) ## `summarise()` has grouped output by &#39;edad&#39;. You can override using the ## `.groups` argument. modelo.con.agregacion &lt;- glm(data=agr, formula=nsin ~ as.factor(edad) + sexo, family = poisson, offset=log(exposicion)) df &lt;- data.frame(coef.sin.agregar = modelo.sin.agregar$coefficients, coef.con.agregacion = modelo.con.agregacion$coefficients) datatable(df) En el caso de la regresión de poisson no es necesario emplear la ponderación porque ya está implícita en el propio offset, por lo que el código es análogo. Señalar que no se ha determinado la validez estadística de cada parámetro, no se ha estudiado el test \\(\\beta_i = 0\\) ni la prevalencia en cada uno de los niveles de los factores. Por lo que el proceso de modelización tiene que pasar previamente por un agrupamiento de variables numéricas, análisis de los factores presentes en el modelo y creación de un número de factores con los niveles adecuados para crear esos microsegmentos que permitan que los resultados sean estadísticamente correctos y que den respuesta al problema que se plantea al científico de datos. Es decir, es necesario seguir una serie de pasos para llegar a crear un modelo, la modelización estadística no es escribir unas líneas de código y que un equipo informático haga magia, requiere de un método que se tratará en el siguiente capítulo. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
